local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local ScreenGui = Instance.new("ScreenGui", gethui and gethui() or LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = "ModernUI"

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 600, 0, 400)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

local TabsContainer = Instance.new("Frame")
TabsContainer.Size = UDim2.new(1, 0, 0, 40)
TabsContainer.Position = UDim2.new(0, 0, 0, 0)
TabsContainer.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TabsContainer.BorderSizePixel = 0
TabsContainer.Parent = MainFrame

local TabsCorner = Instance.new("UICorner")
TabsCorner.CornerRadius = UDim.new(0, 12)
TabsCorner.Parent = TabsContainer

local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, 0, 1, -40)
ContentFrame.Position = UDim2.new(0, 0, 0, 40)
ContentFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
ContentFrame.BorderSizePixel = 0
ContentFrame.Parent = MainFrame

local ContentCorner = Instance.new("UICorner")
ContentCorner.CornerRadius = UDim.new(0, 12)
ContentCorner.Parent = ContentFrame

local function createTab(name, content)
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(0, 120, 0, 40)
    TabButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Text = name
    TabButton.Font = Enum.Font.SourceSansBold
    TabButton.TextSize = 16
    TabButton.BorderSizePixel = 0
    TabButton.Parent = TabsContainer

    local TabCorner = Instance.new("UICorner")
    TabCorner.CornerRadius = UDim.new(0, 12)
    TabCorner.Parent = TabButton

    local TabContent = Instance.new("Frame")
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = false
    TabContent.Parent = ContentFrame

    content.Parent = TabContent

    TabButton.MouseButton1Click:Connect(function()
        for _, child in pairs(ContentFrame:GetChildren()) do
            if child:IsA("Frame") then
                child.Visible = false
            end
        end
        TabContent.Visible = true
    end)

    return TabButton, TabContent
end

local function createToggleButton(parent, labelText, callback)
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0.9, 0, 0, 40)
    ToggleButton.Position = UDim2.new(0.05, 0, 0, 10)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Font = Enum.Font.SourceSansBold
    ToggleButton.TextSize = 16
    ToggleButton.Text = labelText .. ": OFF"
    ToggleButton.Parent = parent

    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 10)
    ToggleCorner.Parent = ToggleButton

    local isEnabled = false
    ToggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        ToggleButton.Text = labelText .. (isEnabled and ": ON" or ": OFF")
        callback(isEnabled)
    end)
end

local function toggleAutoParry(enabled)
    if enabled then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexsiJujuLol/AlexsiJujuLol/main/ikorzButsimple", true))()
    else
    end
end

local MainTabContent = Instance.new("Frame")
createTab("Main", MainTabContent)

local SettingsTabContent = Instance.new("Frame")
createTab("Settings", SettingsTabContent)

createToggleButton(MainTabContent, "Auto Parry", toggleAutoParry)

local function createSlider(parent, labelText)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(0.9, 0, 0, 40)
    SliderFrame.Position = UDim2.new(0.05, 0, 0, 10)
    SliderFrame.BackgroundTransparency = 1
    SliderFrame.Parent = parent

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Size = UDim2.new(0.5, 0, 1, 0)
    TextLabel.Position = UDim2.new(0, 0, 0, 0)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Text = labelText
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.Font = Enum.Font.SourceSans
    TextLabel.TextSize = 16
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    TextLabel.Parent = SliderFrame

    local SliderBar = Instance.new("Frame")
    SliderBar.Size = UDim2.new(0.4, 0, 0.4, 0)
    SliderBar.Position = UDim2.new(0.5, 0, 0.3, 0)
    SliderBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    SliderBar.Parent = SliderFrame

    local Slider = Instance.new("Frame")
    Slider.Size = UDim2.new(0.1, 0, 1, 0)
    Slider.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    Slider.Parent = SliderBar

    local dragging = false

    Slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    Slider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    SliderBar.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePos = game:GetService("UserInputService"):GetMouseLocation().X
            local sliderPos = SliderBar.AbsolutePosition.X
            local sliderSize = SliderBar.AbsoluteSize.X

            local newScale = math.clamp((mousePos - sliderPos) / sliderSize, 0, 1)
            Slider.Size = UDim2.new(newScale, 0, 1, 0)
        end
    end)
end

createSlider(SettingsTabContent, "Aimbot Sensitivity")
