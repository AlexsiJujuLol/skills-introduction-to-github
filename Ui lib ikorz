local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local ScreenGui = Instance.new("ScreenGui", gethui and gethui() or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = game:GetService("Players").LocalPlayer.Name

local MainWindow = Instance.new("Frame")
MainWindow.Size = UDim2.new(0, 500, 0, 400)
MainWindow.Position = UDim2.new(0.5, 0, 0.5, 0)
MainWindow.AnchorPoint = Vector2.new(0.5, 0.5)
MainWindow.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainWindow.Visible = false
MainWindow.Active = true
MainWindow.Draggable = true
MainWindow.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 10)
MainCorner.Parent = MainWindow

local Shadow = Instance.new("Frame")
Shadow.Size = MainWindow.Size + UDim2.new(0, 10, 0, 10)
Shadow.Position = MainWindow.Position + UDim2.new(0, 5, 0, 5)
Shadow.AnchorPoint = MainWindow.AnchorPoint
Shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Shadow.BackgroundTransparency = 0.5
Shadow.ZIndex = 0
Shadow.Parent = ScreenGui

local OpenButton = Instance.new("TextButton")
OpenButton.Size = UDim2.new(0, 150, 0, 50)
OpenButton.Position = UDim2.new(0, 20, 0, 20)
OpenButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
OpenButton.Text = "Open UI"
OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.Font = Enum.Font.SourceSansBold
OpenButton.TextSize = 18
OpenButton.Parent = ScreenGui

local OpenCorner = Instance.new("UICorner")
OpenCorner.CornerRadius = UDim.new(0, 8)
OpenCorner.Parent = OpenButton

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 150, 0, 50)
CloseButton.Position = UDim2.new(1, -160, 0, 20)
CloseButton.AnchorPoint = Vector2.new(1, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
CloseButton.Text = "Close UI"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 18
CloseButton.Visible = true
CloseButton.Parent = MainWindow

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

local UI_Toggled = false

OpenButton.MouseButton1Click:Connect(function()
    MainWindow.Visible = true
    OpenButton.Visible = false
    UI_Toggled = true
    TweenService:Create(Shadow, TweenInfo.new(0.3), {BackgroundTransparency = 0.3}):Play()
end)

CloseButton.MouseButton1Click:Connect(function()
    MainWindow.Visible = false
    OpenButton.Visible = true
    UI_Toggled = false
    TweenService:Create(Shadow, TweenInfo.new(0.3), {BackgroundTransparency = 0.5}):Play()
end)

UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.T then
        UI_Toggled = not UI_Toggled
        MainWindow.Visible = UI_Toggled
        OpenButton.Visible = not UI_Toggled
    end
end)

local dragging = false
local dragInput, dragStart, startPos

MainWindow.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainWindow.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainWindow.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainWindow.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
