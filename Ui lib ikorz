local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = Players.LocalPlayer

local AutoParryEnabled = false
local ParryDelay = 0.55
local ParryCooldown = 1
local DetectionRange = 50
local Cooldown = tick()
local Parried = false
local Connection = nil

local function GetBall()
    for _, Ball in ipairs(workspace.Balls:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            return Ball
        end
    end
end

local function ResetConnection()
    if Connection then
        Connection:Disconnect()
        Connection = nil
    end
end

workspace.Balls.ChildAdded:Connect(function()
    local Ball = GetBall()
    if not Ball then return end
    ResetConnection()
    Connection = Ball:GetAttributeChangedSignal("target"):Connect(function()
        Parried = false
    end)
end)

RunService.PreSimulation:Connect(function()
    if not AutoParryEnabled then return end

    local Ball = GetBall()
    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")

    if not Ball or not HRP then return end

    local Speed = Ball.zoomies.VectorVelocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude

    if Ball:GetAttribute("target") == Player.Name and not Parried and Distance <= DetectionRange and Distance / Speed <= ParryDelay then
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        Parried = true
        Cooldown = tick()
    end

    if (tick() - Cooldown) >= ParryCooldown then
        Parried = false
    end
end)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/LuauCloud/Byte/refs/heads/main/Utils/Library.lua"))()
local Window = Library.Add_Window("Auto Parry Settings")

local AutoParryTab = Window.Create_Tab({ name = "Auto Parry" })
local AutoParrySection = AutoParryTab.Create_Section()

AutoParrySection.Create_Toggle({
    name = "Enable Auto Parry",
    flag = "AutoParryToggle",
    callback = function(state)
        AutoParryEnabled = state
    end
})

AutoParrySection.Create_Slider({
    name = "Parry Delay",
    min = 0.1,
    max = 1.0,
    default = ParryDelay,
    callback = function(value)
        ParryDelay = value
    end
})

AutoParrySection.Create_Slider({
    name = "Detection Range",
    min = 10,
    max = 100,
    default = DetectionRange,
    callback = function(value)
        DetectionRange = value
    end
})

AutoParrySection.Create_Slider({
    name = "Parry Cooldown",
    min = 0.5,
    max = 2.0,
    default = ParryCooldown,
    callback = function(value)
        ParryCooldown = value
    end
})
