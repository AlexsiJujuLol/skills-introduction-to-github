local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/LuauCloud/Byte/refs/heads/main/Utils/Library.lua'))()
local Library_Window = Library.Add_Window('Acceptions')

local AutoParry_Tab = Library_Window.Create_Tab({
    name = 'Auto Parry',
    icon = 'rbxassetid://'
})

local AutoParry_Section = AutoParry_Tab.Create_Section()

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = Players.LocalPlayer
local Cooldown = tick()
local Parried = false
local Connection = nil
getgenv().AutoParryEnabled = false
getgenv().AutoSpamEnabled = false
getgenv().SpamSpeed = 0.5

local function GetBall()
    for _, Ball in ipairs(workspace.Balls:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            return Ball
        end
    end
end

local function ResetConnection()
    if Connection then
        Connection:Disconnect()
        Connection = nil
    end
end

workspace.Balls.ChildAdded:Connect(function()
    local Ball = GetBall()
    if not Ball then return end
    ResetConnection()
    Connection = Ball:GetAttributeChangedSignal("target"):Connect(function()
        Parried = false
    end)
end)

local function detectAndTriggerParry()
    local Ball, HRP = GetBall(), Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not Ball or not HRP then return end
    local Speed = Ball.zoomies.VectorVelocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude
    if Ball:GetAttribute("target") == Player.Name and not Parried and Distance / Speed <= 0.55 then
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        Parried = true
        Cooldown = tick()
    end
    if (tick() - Cooldown) >= 1 then
        Parried = false
    end
end

local function autoSpam()
    while getgenv().AutoSpamEnabled do
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        task.wait(getgenv().SpamSpeed)
    end
end

AutoParry_Section.Create_Toggle({
    name = 'Enable Auto Parry',
    section = 'left',
    flag = 'Auto_Parry',
    callback = function(state)
        getgenv().AutoParryEnabled = state
    end
})

AutoParry_Section.Create_Toggle({
    name = 'Enable Auto Spam',
    section = 'left',
    flag = 'Auto_Spam',
    callback = function(state)
        getgenv().AutoSpamEnabled = state
        if state then
            task.spawn(autoSpam)
        end
    end
})

AutoParry_Section.Create_Slider({
    name = 'Spam Speed',
    section = 'left',
    min = 0.1,
    max = 1,
    default = 0.5,
    decimals = 2,
    callback = function(value)
        getgenv().SpamSpeed = value
    end
})

RunService.RenderStepped:Connect(function()
    if getgenv().AutoParryEnabled then
        detectAndTriggerParry()
    end
end)
