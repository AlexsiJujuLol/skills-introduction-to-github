local Stats = game:GetService("Stats")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local local_player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local parry_remote = nil
local PingBased = false
local PingBasedOffset = 0.05
local DistanceToParry = 0.4
local ParryDelay = 0.015

local function resolve_parry_Remote()
    for _, service in pairs({game:GetService("AdService"), game:GetService("SocialService")}) do
        local temp_remote = service:FindFirstChildOfClass("RemoteEvent")
        if temp_remote and temp_remote.Name:find("\n") then
            parry_remote = temp_remote
            break
        end
    end
end

local function FindBall()
    local RealBall
    for _, ball in pairs(workspace:WaitForChild("Balls"):GetChildren()) do
        if ball:GetAttribute("realBall") == true then
            RealBall = ball
            break
        end
    end
    return RealBall
end

local function IsTheTarget()
    return local_player.Character and local_player.Character:FindFirstChild("Highlight")
end

task.spawn(function()
    while task.wait(ParryDelay) do
        local Ball = FindBall()
        if Ball then
            local BallPosition = Ball.Position
            local BallVelocity = Ball.AssemblyLinearVelocity.Magnitude
            local Distance = local_player:DistanceFromCharacter(BallPosition)
            local Ping = BallVelocity * (Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000)

            if PingBased then
                Distance -= Ping + PingBasedOffset
            end

            if (Distance / BallVelocity) <= DistanceToParry and IsTheTarget() then
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            end
        end
    end
end)

resolve_parry_Remote()

-- Mobile-friendly UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
ScreenGui.Name = "AutoParryUI"

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 200, 0, 50)
Frame.Position = UDim2.new(0.5, -100, 0, 50)
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.AnchorPoint = Vector2.new(0.5, 0.5)

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = Frame
ToggleButton.Size = UDim2.new(1, 0, 1, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
ToggleButton.Text = "Enable Auto Parry"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 20

local autoParryEnabled = true

ToggleButton.MouseButton1Click:Connect(function()
    autoParryEnabled = not autoParryEnabled
    if autoParryEnabled then
        ToggleButton.Text = "Disable Auto Parry"
    else
        ToggleButton.Text = "Enable Auto Parry"
    end
end)

print("Script initialized with Auto Parry enabled.")