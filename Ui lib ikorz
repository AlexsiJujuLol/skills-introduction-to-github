local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

local AutoAimEnabled = true
local ESPEnabled = true
local NoclipEnabled = true
local DetectionRange = 1000
local EnemiesOnly = true
local AutoParryEnabled = true
local ReactionTime = 0.35
local DetectionRangeParry = 50
local CooldownTime = 0.15
local Parried = false
local LastParryTime = 0

local Player = game.Players.LocalPlayer

local Window = OrionLib:MakeWindow({
    Name = "Ikorz Script Hub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "IkorzConfig"
})

local ArsenalTab = Window:MakeTab({
    Name = "Arsenal",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ArsenalTab:AddToggle({
    Name = "Enable Aimbot",
    Default = true,
    Callback = function(value)
        AutoAimEnabled = value
        OrionLib:MakeNotification({
            Name = "Aimbot",
            Content = value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

ArsenalTab:AddToggle({
    Name = "Enable ESP",
    Default = true,
    Callback = function(value)
        ESPEnabled = value
        OrionLib:MakeNotification({
            Name = "ESP",
            Content = value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

ArsenalTab:AddToggle({
    Name = "Enable Noclip",
    Default = true,
    Callback = function(value)
        NoclipEnabled = value
        OrionLib:MakeNotification({
            Name = "Noclip",
            Content = value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

local BladeBallTab = Window:MakeTab({
    Name = "Blade Ball",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

BladeBallTab:AddToggle({
    Name = "Enable Auto Parry",
    Default = true,
    Callback = function(value)
        AutoParryEnabled = value
        OrionLib:MakeNotification({
            Name = "Auto Parry",
            Content = value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

BladeBallTab:AddSlider({
    Name = "Reaction Time (Seconds)",
    Min = 0.1,
    Max = 1,
    Default = 0.35,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.01,
    ValueName = "s",
    Callback = function(value)
        ReactionTime = value
    end
})

BladeBallTab:AddSlider({
    Name = "Detection Range (Studs)",
    Min = 10,
    Max = 100,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "studs",
    Callback = function(value)
        DetectionRangeParry = value
    end
})

BladeBallTab:AddSlider({
    Name = "Parry Cooldown (Seconds)",
    Min = 0.1,
    Max = 1,
    Default = 0.15,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.01,
    ValueName = "s",
    Callback = function(value)
        CooldownTime = value
    end
})

local function CreateESP(player)
    local Box = Drawing.new("Square")
    Box.Visible = false
    Box.Color = Color3.fromRGB(255, 0, 0)
    Box.Thickness = 1
    Box.Transparency = 1
    Box.Filled = false

    local function Update()
        while ESPEnabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 do
            local RootPart = player.Character.HumanoidRootPart
            local ScreenPosition, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(RootPart.Position)

            if OnScreen then
                Box.Visible = true
                Box.Size = Vector2.new(2000 / ScreenPosition.Z, 3000 / ScreenPosition.Z)
                Box.Position = Vector2.new(ScreenPosition.X - Box.Size.X / 2, ScreenPosition.Y - Box.Size.Y / 2)
            else
                Box.Visible = false
            end

            task.wait()
        end
        Box.Visible = false
    end

    task.spawn(Update)
end

for _, plr in pairs(game.Players:GetPlayers()) do
    if plr ~= Player and (not EnemiesOnly or plr.Team ~= Player.Team) then
        CreateESP(plr)
    end
end

game.Players.PlayerAdded:Connect(function(plr)
    if plr ~= Player and (not EnemiesOnly or plr.Team ~= Player.Team) then
        CreateESP(plr)
    end
end)

game:GetService("RunService").Stepped:Connect(function()
    if NoclipEnabled then
        for _, v in pairs(Player.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
end)

local function GetClosestEnemy()
    local closestEnemy, closestDistance = nil, DetectionRange
    for _, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= Player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
            if not EnemiesOnly or plr.Team ~= Player.Team then
                local Distance = (Player.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                if Distance < closestDistance then
                    closestDistance = Distance
                    closestEnemy = plr
                end
            end
        end
    end
    return closestEnemy
end

game:GetService("RunService").RenderStepped:Connect(function()
    if AutoAimEnabled and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        local Enemy = GetClosestEnemy()
        if Enemy and Enemy.Character and Enemy.Character:FindFirstChild("HumanoidRootPart") then
            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Enemy.Character.HumanoidRootPart.Position)
        end
    end
end)

local function GetClosestBall()
    local closestBall, closestDistance = nil, math.huge
    local BallsFolder = workspace:FindFirstChild("Balls")
    if not BallsFolder then return nil end

    for _, Ball in ipairs(BallsFolder:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if HRP then
                local Distance = (HRP.Position - Ball.Position).Magnitude
                if Distance < closestDistance then
                    closestDistance = Distance
                    closestBall = Ball
                end
            end
        end
    end
    return closestBall
end

game:GetService("RunService").RenderStepped:Connect(function()
    if not AutoParryEnabled then return end

    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not HRP then return end

    local Ball = GetClosestBall()
    if not Ball then return end

    local BallVelocity = Ball.Velocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude
    local TimeToReach = Distance / BallVelocity

    if Ball:GetAttribute("target") == Player.Name and not Parried and Distance <= DetectionRangeParry and TimeToReach <= ReactionTime then
        if (tick() - LastParryTime) >= CooldownTime then
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 0)
            Parried = true
            LastParryTime = tick()
        end
    end

    if (tick() - LastParryTime) >= CooldownTime then
        Parried = false
    end
end)

OrionLib:MakeNotification({
    Name = "Ikorz Script Hub",
    Content = "Script loaded successfully!",
    Image = "rbxassetid://4483345998",
    Time = 5
})
