local Ikorz = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Create Fluent UI Window
local Window = Ikorz:CreateWindow({
    Title = "Ikorz Auto Parry",
    SubTitle = "Fluent UI Example",
    TabWidth = 160,
    Size = UDim2.fromOffset(400, 300),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Auto Parry Tab
local AutoParryTab = Window:AddTab({ Title = "Auto Parry" })

-- Variables
local AutoParryEnabled = false
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = Players.LocalPlayer
local DetectionRange = 15
local ReactionTime = 0.5
local BallForce = 500

-- Remote or custom handling
local BladeBallRemote = ReplicatedStorage:FindFirstChild("BladeBallRemote") or error("BladeBallRemote not found")

-- Function to Detect Closest Ball
local function GetClosestBall()
    local closestBall, closestDistance = nil, math.huge
    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if HRP then
        for _, Ball in ipairs(workspace.Balls:GetChildren()) do
            if Ball:IsA("BasePart") and Ball:GetAttribute("realBall") then
                local Distance = (HRP.Position - Ball.Position).Magnitude
                if Distance < closestDistance then
                    closestDistance = Distance
                    closestBall = Ball
                end
            end
        end
    end
    return closestBall
end

-- Auto Parry Logic
RunService.Heartbeat:Connect(function()
    if not AutoParryEnabled then return end

    local Ball = GetClosestBall()
    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not Ball or not HRP then return end

    local Distance = (HRP.Position - Ball.Position).Magnitude
    local BallVelocity = Ball.AssemblyLinearVelocity.Magnitude -- Use AssemblyLinearVelocity for physics
    local TimeToReach = Distance / (BallVelocity > 0 and BallVelocity or 1)

    if Distance <= DetectionRange and TimeToReach <= ReactionTime then
        if Ball:GetAttribute("target") == Player.Name then
            -- Execute Parry
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            Ball:ApplyImpulse((Ball.Position - HRP.Position).Unit * BallForce)

            -- Notify the server via RemoteEvent (if applicable)
            BladeBallRemote:FireServer(Ball)
        end
    end
end)

-- Add Toggle to Auto Parry Tab
local AutoParryToggle = AutoParryTab:AddToggle("AutoParryToggle", { Title = "Enable Auto Parry", Default = false })

AutoParryToggle:OnChanged(function()
    AutoParryEnabled = AutoParryToggle.Value
    if AutoParryEnabled then
        print("Auto Parry Enabled!")
    else
        print("Auto Parry Disabled!")
    end
end)

-- Select Tab on Load
Window:SelectTab(1)

Ikorz:Notify({
    Title = "Ikorz Auto Parry",
    Content = "Script Loaded Successfully",
    Duration = 5
})
