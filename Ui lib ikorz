local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

local BlurEffect = Instance.new("BlurEffect")
BlurEffect.Size = 0
BlurEffect.Parent = Lighting

local ScreenGui = Instance.new("ScreenGui", gethui and gethui() or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = "SexyUILib"

local MainWindow = Instance.new("Frame")
MainWindow.Size = UDim2.new(0, 500, 0, 400)
MainWindow.Position = UDim2.new(0.5, 0, 0.5, 0)
MainWindow.AnchorPoint = Vector2.new(0.5, 0.5)
MainWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainWindow.BackgroundTransparency = 0.1
MainWindow.BorderSizePixel = 0
MainWindow.Visible = false
MainWindow.Active = true
MainWindow.Draggable = true
MainWindow.Parent = ScreenGui

local Gradient = Instance.new("UIGradient")
Gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 25))
}
Gradient.Rotation = 45
Gradient.Parent = MainWindow

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainWindow

local OpenButton = Instance.new("TextButton")
OpenButton.Size = UDim2.new(0, 150, 0, 50)
OpenButton.Position = UDim2.new(0.5, 0, 0.85, 0)
OpenButton.AnchorPoint = Vector2.new(0.5, 0.5)
OpenButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
OpenButton.Text = "Open UI"
OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.Font = Enum.Font.SourceSansBold
OpenButton.TextSize = 18
OpenButton.Parent = ScreenGui

local OpenCorner = Instance.new("UICorner")
OpenCorner.CornerRadius = UDim.new(0, 10)
OpenCorner.Parent = OpenButton

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 150, 0, 50)
CloseButton.Position = UDim2.new(0.5, 0, 0.95, 0)
CloseButton.AnchorPoint = Vector2.new(0.5, 0.5)
CloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
CloseButton.Text = "Close UI"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 18
CloseButton.Parent = MainWindow

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 10)
CloseCorner.Parent = CloseButton

local AutoParryButton = Instance.new("TextButton")
AutoParryButton.Size = UDim2.new(0, 200, 0, 50)
AutoParryButton.Position = UDim2.new(0.5, 0, 0.4, 0)
AutoParryButton.AnchorPoint = Vector2.new(0.5, 0.5)
AutoParryButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
AutoParryButton.Text = "Auto Parry: OFF"
AutoParryButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoParryButton.Font = Enum.Font.SourceSansBold
AutoParryButton.TextSize = 18
AutoParryButton.Parent = MainWindow

local AutoParryCorner = Instance.new("UICorner")
AutoParryCorner.CornerRadius = UDim.new(0, 10)
AutoParryCorner.Parent = AutoParryButton

local AutoParryEnabled = false

AutoParryButton.MouseButton1Click:Connect(function()
    AutoParryEnabled = not AutoParryEnabled
    AutoParryButton.Text = AutoParryEnabled and "Auto Parry: ON" or "Auto Parry: OFF"

    if AutoParryEnabled then
        local success, errorMsg = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexsiJujuLol/AlexsiJujuLol/main/ikorzButsimple", true))()
        end)
        if not success then
            print("Failed to load Auto Parry script:", errorMsg)
        else
            print("Auto Parry enabled")
        end
    else
        print("Auto Parry disabled")
    end
end)

OpenButton.MouseButton1Click:Connect(function()
    MainWindow.Visible = true
    OpenButton.Visible = false
    TweenService:Create(BlurEffect, TweenInfo.new(0.5), {Size = 10}):Play()
end)

CloseButton.MouseButton1Click:Connect(function()
    MainWindow.Visible = false
    OpenButton.Visible = true
    TweenService:Create(BlurEffect, TweenInfo.new(0.5), {Size = 0}):Play()
end)

UserInputService.InputBegan:Connect(function(input, isProcessed)
    if not isProcessed and input.KeyCode == Enum.KeyCode.T then
        local isVisible = not MainWindow.Visible
        MainWindow.Visible = isVisible
        OpenButton.Visible = not isVisible
        TweenService:Create(BlurEffect, TweenInfo.new(0.5), {Size = isVisible and 10 or 0}):Play()
    end
end)

local dragging, dragInput, dragStart, startPos

MainWindow.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainWindow.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainWindow.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainWindow.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)
