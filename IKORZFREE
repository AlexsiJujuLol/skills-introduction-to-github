--=====================--
-- AUTO PARRY + FLUENT UI
--=====================--

-- 1) Check if the game is loaded
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- 2) Load Fluent UI library
local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/Fsploit/UI-lib/refs/heads/main/Fluentremake.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- 3) Create the Fluent window
local Window = Fluent:CreateWindow({
    Title = "server de ikorz [dsc.gg/server-de-ikorz]",
    SubTitle = "By CEO of seliena reborn",
    TabWidth = 150,
    Size = UDim2.fromOffset(500,250),
    Acrylic = false,
    Theme = "Dark Typewriter",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- 4) Create some tabs in the window
local Tabs = {
    Home = Window:AddTab({ Title = "Info", Icon = "newspaper" }),
    Main = Window:AddTab({ Title = "Auto Parry", Icon = "sword" }),
    Visual = Window:AddTab({ Title = "Visuals", Icon = "eye" }),
    Setting = Window:AddTab({ Title = "Settings", Icon = "cog" }),
}

-- 5) Info tab with a short paragraph
do
    local infoSection = Tabs.Home:AddSection("Information")
    Tabs.Home:AddParagraph({
        Title = "server de ikorz",
        Content = [[
Welcome to server de ikorz!
- Fixed Parry
- Fixed Spam
- Fixed Manual Spam
- Anti cheat Bypassed
- Fixed Lag
- go to dsc to buy premium
        ]]
    })
end

-- 6) Define some global references & variables for the auto parry code
getgenv().auto_parry_enabled = false
getgenv().auto_parry_spam_enabled = false

-- 7) Add toggles to control auto parry
do
    Tabs.Main:AddToggle("AutoParryToggle", {
        Title = "Auto Parry",
        Description = "Parry the ball with precision and accuracy",
        Default = false,
        Callback = function(value)
            auto_parry_enabled = value
            print("Auto Parry Enabled:", value)
        end
    })

    Tabs.Main:AddToggle("AutoSpamToggle", {
        Title = "Auto Spam",
        Description = "Automatically spam parries",
        Default = false,
        Callback = function(value)
            auto_parry_spam_enabled = value
            print("Auto Spam Enabled:", value)
        end
    })
end

-- 8) Optional: Some settings for the parry mode, etc.
do
    Tabs.Setting:AddDropdown("ParryMode", {
        Title = "Parry Mode",
        Description = "Choose a parry mode",
        Values = {"Legit", "Rage"},
        Multi = false,
        Default = 1,  -- 1 = "Legit", 2 = "Rage"
        Callback = function(chosen)
            getgenv().parry_mode = chosen
            print("Parry Mode:", chosen)
        end
    })

    Tabs.Setting:AddSlider("SpamSpeed", {
        Title = "Spam Speed",
        Description = "How many times to parry per cycle",
        Default = 1,
        Min = 1,
        Max = 10,
        Rounding = 0,
        Callback = function(value)
            getgenv().spam_speed = value
            print("Spam Speed set to:", value)
        end
    })
end

-- 9) Now we load your big auto parry snippet
--    but in a local scope so it can read the toggles.

loadstring([[
----------------------------------------------------------------
-- START OF AUTO PARRY LOGIC
----------------------------------------------------------------

-- If your snippet references cloneref, you must ensure your
-- exploit has that function. If not, remove "cloneref(...)"
-- calls and just do game:GetService.

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")
local workspace = game:GetService("Workspace")

-- We'll assume 'auto_parry_enabled' and 'auto_parry_spam_enabled'
-- are read from getgenv() so we can see changes from the toggles:
local function isAutoParryEnabled()
    return getgenv().auto_parry_enabled
end

local function isAutoParrySpamEnabled()
    return getgenv().auto_parry_spam_enabled
end

-- Replace your big auto parry logic here. Example:

print("Auto Parry snippet loaded. Checking toggles...")

RunService.RenderStepped:Connect(function()
    if isAutoParryEnabled() then
        -- do your auto parry checks
        -- if isAutoParrySpamEnabled() then do spam
    end
end)

----------------------------------------------------------------
-- END OF AUTO PARRY LOGIC
----------------------------------------------------------------
]])()

-- 10) That’s it. The UI should appear if your exploit supports GUI.
print("✅ Auto Parry + Fluent UI script fully loaded!")